on:
  workflow_call:
    inputs:
      codeRepository:
        required: true
        type: string
        description: "The jellyfin code repository to package with the selected rpm descriptor (i.e. jellyfin/jellyfin)."
      codeRepositoryRef:
        required: true
        type: string
        description: "The jellyfin code repository ref to package with the selected rpm descriptor (i.e. a given git hash or a git tag)."
      containerSpec:
        type: string
        required: true
        description: "The build context in which to find the metaValues YAML as well as all container context relevant files."
      imageName:
        type: string
        required: true
        description: "The name that the container image should be available under."
      imageTag:
        type: string
        required: true
        description: "A the base tag the container image should be available under."
      imageTagSuffix:
        type: string
        required: false
        description: "A tag suffix that should get applied to all generated tags."
      imageLabels:
        type: string
        required: false
        description: "A space seperated list of labels to add to the built container image."
      containerfile:
        type: string
        required: true
        description: "The relative path to the Containerfile within the repository."
      publishImage:
        type: boolean
        required: false
        default: false
        description: "Sets if the container image should get pushed after a successful build."
    secrets:
      ghc_usr:
        required: true
      ghc_tkn:
        required: true
      dh_usr:
        required: false
      dh_tkn:
        required: false
      quay_usr:
        required: false
      quay_tkn:
        required: false

jobs:
  buildContainer:
    runs-on: ubuntu-22.04
    steps:
      - name: "Install qemu dependency"
        uses: docker/setup-qemu-action@v2

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Checkout Container Repository"
        uses: actions/checkout@v3
        with:
          path: jellyfin-container

      - name: "Checkout Code Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.codeRepository }}
          ref: ${{ inputs.codeRepositoryRef }}
          path: jellyfin-code

      - name: "Copy container Folder"
        run: cp -r jellyfin-container/${{ inputs.containerSpec }}/* jellyfin-code

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.ghc_usr }}
          password: ${{ secrets.ghc_tkn }}

      - name: "Gather Container Image Facts"
        id: imageFacts
        uses: docker/metadata-action@v4
        with:
          images: |-
            ghcr.io/${{ github.repository_owner }}/${{ inputs.imageName }}
            docker.io/jellyfin/${{ inputs.imageName }},enable=${{ startsWith(github.ref, 'refs/heads/release-') }}
            quay.io/jellyfin/${{ inputs.imageName }},enable=${{ startsWith(github.ref, 'refs/heads/release-') }}
          flavor: |-
            suffix=${{ inputs.imageTagSuffix }},onlatest=true
          tags: |-
            type=semver,pattern={{version}},value=${{ inputs.imageTag }},enable=${{ startsWith(github.ref, 'refs/heads/release-') }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.imageTag }},enable=${{ startsWith(github.ref, 'refs/heads/release-') }}
            type=raw,value=${{ inputs.imageTag }},enable=${{ ! startsWith(github.ref, 'refs/heads/release-') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/heads/release-') }}
            type=raw,value=unstable,enable=${{ ! startsWith(github.ref, 'refs/heads/release-') }}
          labels: ${{ inputs.imageLabels }}

      - name: "Build and Push Container Image"
        uses: docker/build-push-action@v3
        with:
          tags: ${{ steps.imageFacts.outputs.tags }}
          labels: ${{ steps.imageFacts.outputs.labels }}
          file: jellyfin-code/${{ inputs.containerfile }}
          context: jellyfin-code
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: ${{ inputs.publishImage }}
